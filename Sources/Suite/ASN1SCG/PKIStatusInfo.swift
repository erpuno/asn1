// Generated by ASN1.ERP.UNO Compiler, Copyright © 2023—2024 Namdak Tönpa.
import SwiftASN1
import Foundation

@usableFromInline struct PKIStatusInfo: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var status: Int
    @usableFromInline var statusString: [ASN1UTF8String]?
    @usableFromInline var failInfo: ASN1BitString?
    @inlinable init(status: Int, statusString: [ASN1UTF8String]?, failInfo: ASN1BitString?) {
        self.status = status
        self.statusString = statusString
        self.failInfo = failInfo
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let status: Int = try Int(derEncoded: &nodes)
            let statusString: [ASN1UTF8String]? = try DER.sequence(of: ASN1UTF8String.self, identifier: .sequence, nodes: &nodes)
            let failInfo: ASN1BitString? = try ASN1BitString(derEncoded: &nodes)
            return PKIStatusInfo(status: status, statusString: statusString, failInfo: failInfo)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(status)
            if let statusString = self.statusString { try coder.serializeSequenceOf(statusString) }
            if let failInfo = self.failInfo { try coder.serialize(failInfo) }
        }
    }
}
