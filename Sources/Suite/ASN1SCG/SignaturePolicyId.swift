// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Foundation

@usableFromInline struct SignaturePolicyId: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var sigPolicyId: ASN1ObjectIdentifier
    @usableFromInline var sigPolicyHash: OtherHashAlgAndValue?
    @inlinable init(sigPolicyId: ASN1ObjectIdentifier, sigPolicyHash: OtherHashAlgAndValue?) {
        self.sigPolicyId = sigPolicyId
        self.sigPolicyHash = sigPolicyHash
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let sigPolicyId: ASN1ObjectIdentifier = try ASN1ObjectIdentifier(derEncoded: &nodes)
            let sigPolicyHash: OtherHashAlgAndValue? = try OtherHashAlgAndValue(derEncoded: &nodes)
            return SignaturePolicyId(sigPolicyId: sigPolicyId, sigPolicyHash: sigPolicyHash)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(sigPolicyId)
            if let sigPolicyHash = self.sigPolicyHash { try coder.serialize(sigPolicyHash) }
        }
    }
}
