// Generated by ASN1.ERP.UNO Compiler, Copyright © 2023—2024 Namdak Tönpa.
import SwiftASN1
import Foundation

@usableFromInline indirect enum DSTU4145Params_definition_Choice: DERImplicitlyTaggable, DERParseable, DERSerializable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .enumerated }
    case ecbinary(ECBinary)
    case namedCurve(ASN1ObjectIdentifier)
    @inlinable init(derEncoded rootNode: ASN1Node, withIdentifier: ASN1Identifier) throws {
        switch rootNode.identifier {
            case ASN1Identifier(tagWithNumber: 0, tagClass: .application):
                self = .ecbinary(try ECBinary(derEncoded: rootNode, withIdentifier: rootNode.identifier))
            case ASN1Identifier(tagWithNumber: 1, tagClass: .application):
                self = .namedCurve(try ASN1ObjectIdentifier(derEncoded: rootNode, withIdentifier: rootNode.identifier))
            default: throw ASN1Error.unexpectedFieldType(rootNode.identifier)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer, withIdentifier: ASN1Identifier) throws {
        switch self {
            case .ecbinary(let ecbinary):
                try coder.appendConstructedNode(
                identifier: ASN1Identifier(tagWithNumber: 0, tagClass: .application),
                { coder in try coder.serialize(ecbinary) })
            case .namedCurve(let namedCurve):
                try coder.appendConstructedNode(
                identifier: ASN1Identifier(tagWithNumber: 1, tagClass: .application),
                { coder in try coder.serialize(namedCurve) })
        }
    }

}
