// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Foundation

@usableFromInline struct SigningCertificateV2: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var certs: [ESSCertIDv2]
    @usableFromInline var policies: [PolicyInformation]?
    @inlinable init(certs: [ESSCertIDv2], policies: [PolicyInformation]?) {
        self.certs = certs
        self.policies = policies
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let certs: [ESSCertIDv2] = try DER.sequence(of: ESSCertIDv2.self, identifier: .sequence, nodes: &nodes)
            let policies: [PolicyInformation]? = try DER.sequence(of: PolicyInformation.self, identifier: .sequence, nodes: &nodes)
            return SigningCertificateV2(certs: certs, policies: policies)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serializeSequenceOf(certs)
            if let policies = self.policies { try coder.serializeSequenceOf(policies) }
        }
    }
}
