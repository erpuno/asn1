// Generated by ASN1.ERP.UNO Compiler, Copyright © 2023—2024 Namdak Tönpa.
import SwiftASN1
import Foundation

@usableFromInline struct IssuerSerial: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var issuer: [GeneralName]
    @usableFromInline var serialNumber: ArraySlice<UInt8>
    @inlinable init(issuer: [GeneralName], serialNumber: ArraySlice<UInt8>) {
        self.issuer = issuer
        self.serialNumber = serialNumber
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let issuer: [GeneralName] = try DER.sequence(of: GeneralName.self, identifier: .sequence, nodes: &nodes)
            let serialNumber: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            return IssuerSerial(issuer: issuer, serialNumber: serialNumber)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serializeSequenceOf(issuer)
            try coder.serialize(serialNumber)
        }
    }
}
