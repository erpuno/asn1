// Generated by ASN1.ERP.UNO Compiler, Copyright © 2023—2024 Namdak Tönpa.
import SwiftASN1
import Foundation

@usableFromInline struct Pentanomial: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var k: ArraySlice<UInt8>
    @usableFromInline var j: ArraySlice<UInt8>
    @usableFromInline var l: ArraySlice<UInt8>
    @inlinable init(k: ArraySlice<UInt8>, j: ArraySlice<UInt8>, l: ArraySlice<UInt8>) {
        self.k = k
        self.j = j
        self.l = l
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let k: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            let j: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            let l: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            return Pentanomial(k: k, j: j, l: l)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(k)
            try coder.serialize(j)
            try coder.serialize(l)
        }
    }
}
