// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct Real: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var mantissa: ArraySlice<UInt8>
    @usableFromInline var base: ArraySlice<UInt8>
    @usableFromInline var exponent: ArraySlice<UInt8>
    @inlinable init(mantissa: ArraySlice<UInt8>, base: ArraySlice<UInt8>, exponent: ArraySlice<UInt8>) {
        self.mantissa = mantissa
        self.base = base
        self.exponent = exponent
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let mantissa: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            let base: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            let exponent: ArraySlice<UInt8> = try ArraySlice<UInt8>(derEncoded: &nodes)
            return Real(mantissa: mantissa, base: base, exponent: exponent)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(mantissa)
            try coder.serialize(base)
            try coder.serialize(exponent)
        }
    }
}
