// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Foundation

@usableFromInline struct PolicyInformation: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var policyIdentifier: ASN1ObjectIdentifier
    @usableFromInline var policyQualifiers: [PolicyQualifierInfo]?
    @inlinable init(policyIdentifier: ASN1ObjectIdentifier, policyQualifiers: [PolicyQualifierInfo]?) {
        self.policyIdentifier = policyIdentifier
        self.policyQualifiers = policyQualifiers
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let policyIdentifier: ASN1ObjectIdentifier = try ASN1ObjectIdentifier(derEncoded: &nodes)
            let policyQualifiers: [PolicyQualifierInfo]? = try DER.sequence(of: PolicyQualifierInfo.self, identifier: .sequence, nodes: &nodes)
            return PolicyInformation(policyIdentifier: policyIdentifier, policyQualifiers: policyQualifiers)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(policyIdentifier)
            if let policyQualifiers = self.policyQualifiers { try coder.serializeSequenceOf(policyQualifiers) }
        }
    }
}
