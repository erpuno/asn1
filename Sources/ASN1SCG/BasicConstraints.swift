// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct BasicConstraints: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var cA: Bool
    @usableFromInline var pathLenConstraint: ArraySlice<UInt8>?
    @inlinable init(cA: Bool, pathLenConstraint: ArraySlice<UInt8>?) {
        self.cA = cA
        self.pathLenConstraint = pathLenConstraint
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let cA: Bool = try Bool(derEncoded: &nodes)
            let pathLenConstraint: ArraySlice<UInt8>? = try ArraySlice<UInt8>(derEncoded: &nodes)
            return BasicConstraints(cA: cA, pathLenConstraint: pathLenConstraint)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(cA)
            if let pathLenConstraint = self.pathLenConstraint { try coder.serialize(pathLenConstraint) }
        }
    }
}
