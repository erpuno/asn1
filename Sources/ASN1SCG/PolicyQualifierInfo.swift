// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct PolicyQualifierInfo: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var policyQualifierId: ASN1ObjectIdentifier
    @usableFromInline var qualifier: ASN1Any
    @inlinable init(policyQualifierId: ASN1ObjectIdentifier, qualifier: ASN1Any) {
        self.policyQualifierId = policyQualifierId
        self.qualifier = qualifier
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let policyQualifierId: ASN1ObjectIdentifier = try ASN1ObjectIdentifier(derEncoded: &nodes)
            let qualifier: ASN1Any = try ASN1Any(derEncoded: &nodes)
            return PolicyQualifierInfo(policyQualifierId: policyQualifierId, qualifier: qualifier)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(policyQualifierId)
            try coder.serialize(qualifier)
        }
    }
}
