// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct OriginatorPublicKey: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var algorithm: AlgorithmIdentifier
    @usableFromInline var publicKey: ASN1BitString
    @inlinable init(algorithm: AlgorithmIdentifier, publicKey: ASN1BitString) {
        self.algorithm = algorithm
        self.publicKey = publicKey
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let algorithm: AlgorithmIdentifier = try AlgorithmIdentifier(derEncoded: &nodes)
            let publicKey: ASN1BitString = try ASN1BitString(derEncoded: &nodes)
            return OriginatorPublicKey(algorithm: algorithm, publicKey: publicKey)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(algorithm)
            try coder.serialize(publicKey)
        }
    }
}
