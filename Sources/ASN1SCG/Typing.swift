// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct Typing: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var session: ASN1OctetString
    @usableFromInline var nickname: ASN1OctetString
    @usableFromInline var comments: [ASN1OctetString]
    @inlinable init(session: ASN1OctetString, nickname: ASN1OctetString, comments: [ASN1OctetString]) {
        self.session = session
        self.nickname = nickname
        self.comments = comments
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let session: ASN1OctetString = try ASN1OctetString(derEncoded: &nodes)
            let nickname: ASN1OctetString = try ASN1OctetString(derEncoded: &nodes)
            let comments: [ASN1OctetString] = try DER.sequence(of: ASN1OctetString.self, identifier: .sequence, nodes: &nodes)
            return Typing(session: session, nickname: nickname, comments: comments)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(session)
            try coder.serialize(nickname)
            try coder.serializeSequenceOf(comments)
        }
    }
}
