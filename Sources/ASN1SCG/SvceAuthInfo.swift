// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct SvceAuthInfo: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var service: GeneralName
    @usableFromInline var ident: GeneralName
    @usableFromInline var authInfo: ASN1OctetString?
    @inlinable init(service: GeneralName, ident: GeneralName, authInfo: ASN1OctetString?) {
        self.service = service
        self.ident = ident
        self.authInfo = authInfo
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let service: GeneralName = try GeneralName(derEncoded: &nodes)
            let ident: GeneralName = try GeneralName(derEncoded: &nodes)
            let authInfo: ASN1OctetString? = try ASN1OctetString(derEncoded: &nodes)
            return SvceAuthInfo(service: service, ident: ident, authInfo: authInfo)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(service)
            try coder.serialize(ident)
            if let authInfo = self.authInfo { try coder.serialize(authInfo) }
        }
    }
}
