// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline struct ORAddress: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var built_in_standard_attributes: BuiltInStandardAttributes
    @usableFromInline var built_in_domain_defined_attributes: [BuiltInDomainDefinedAttribute]?
    @usableFromInline var extension_attributes: [ExtensionAttribute]?
    @inlinable init(built_in_standard_attributes: BuiltInStandardAttributes, built_in_domain_defined_attributes: [BuiltInDomainDefinedAttribute]?, extension_attributes: [ExtensionAttribute]?) {
        self.built_in_standard_attributes = built_in_standard_attributes
        self.built_in_domain_defined_attributes = built_in_domain_defined_attributes
        self.extension_attributes = extension_attributes
    }
    @inlinable init(derEncoded root: ASN1Node,
        withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let built_in_standard_attributes: BuiltInStandardAttributes = try BuiltInStandardAttributes(derEncoded: &nodes)
            let built_in_domain_defined_attributes: [BuiltInDomainDefinedAttribute]? = try DER.sequence(of: BuiltInDomainDefinedAttribute.self, identifier: .sequence, nodes: &nodes)
            let extension_attributes: [ExtensionAttribute]? = try DER.set(of: ExtensionAttribute.self, identifier: .set, nodes: &nodes)
            return ORAddress(built_in_standard_attributes: built_in_standard_attributes, built_in_domain_defined_attributes: built_in_domain_defined_attributes, extension_attributes: extension_attributes)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer,
        withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(built_in_standard_attributes)
            if let built_in_domain_defined_attributes = self.built_in_domain_defined_attributes { try coder.serializeSequenceOf(built_in_domain_defined_attributes) }
            if let extension_attributes = self.extension_attributes { try coder.serializeSetOf(extension_attributes) }
        }
    }
}
