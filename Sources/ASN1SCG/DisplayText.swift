// Generated by ASN1.ERP.UNO Compiler, Copyright Â© 2023 Namdak Tonpa.
import SwiftASN1
import Crypto
import Foundation

@usableFromInline indirect enum DisplayText: DERParseable, DERSerializable, Hashable, Sendable {
    case ia5String(ASN1IA5String)
    case visibleString(VisibleString)
    case bmpString(ASN1BMPString)
    case utf8String(ASN1UTF8String)
    @inlinable init(derEncoded rootNode: ASN1Node) throws {
        switch rootNode.identifier {
            case ASN1IA5String.defaultIdentifier:
                self = .ia5String(try ASN1IA5String(derEncoded: rootNode))
            case VisibleString.defaultIdentifier:
                self = .visibleString(try VisibleString(derEncoded: rootNode))
            case ASN1BMPString.defaultIdentifier:
                self = .bmpString(try ASN1BMPString(derEncoded: rootNode))
            case ASN1UTF8String.defaultIdentifier:
                self = .utf8String(try ASN1UTF8String(derEncoded: rootNode))
            default: throw ASN1Error.unexpectedFieldType(rootNode.identifier)
        }
    }
    @inlinable func serialize(into coder: inout DER.Serializer) throws {
        switch self {
            case .ia5String(let ia5String): try coder.serialize(ia5String)
            case .visibleString(let visibleString): try coder.serialize(visibleString)
            case .bmpString(let bmpString): try coder.serialize(bmpString)
            case .utf8String(let utf8String): try coder.serialize(utf8String)
        }
    }

}
